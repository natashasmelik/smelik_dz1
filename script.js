function func(){
  var object = {tag: null, text: null, count: 0} // создаем объект с пустыми полями, далее мы в него будем вписывать полученные данные
  var pTag = document.getElementsByTagName('p')[0]; // находим наш единственный на странице тэг <p>. 
  var pTagStr = pTag.textContent; //достаем из найденного выше тэга текстровое содержимое(строку, содержащую информацию, которую мы будем дальше парсить) 
  console.log(pTag); // выводим в консоль найденный <p> тэг (чисто для проверки)
  console.log(pTagStr); // выводим в консоль строку, полученную из тэга (чисто для проверки)
  object.tag = pTagStr.match(/tag:([a-z]*)\;/)[1]; // С помощью регулярного выражения достаем из найденной выше строки все, что находится между tag: и ; 
    //(получаем только то, что нам нужно, в данном случае тэг) и присваиваем полю .tag вышесозданному объекту 
  object.text = pTagStr.match(/text:(.*)\;/)[1]; // С помощью регулярного выражения достаем из найденной выше строки все, что находится между text: и ; 
    //(получаем только то, что нам нужно, в данном случае текст) и присваиваем полю .text вышесозданному объекту
  object.count = parseInt(pTagStr.match(/count:(\d+)/)[1],10); //С помощью регулярного выражения достаем из найденной выше строки все, что находится между count: и ; 
    //(получаем только то, что нам нужно, в данном случае количество), а после преобразовываем полученное текстово значение в целое число(int) с помощью функции parseInt и присваиваем полю .count вышесозданному объекту 
    //(к int мы парсим для того, чтобы по нему потом зациклить)
  console.log(object); //выводим в консоль объект с новыми значениями полей (чисто для проверки)
  document.body.removeChild(pTag); // удаляем из оъектной модели документа(DOM) уже ненужный нам тэг <p>, 
  var newTag = document.createElement(object.tag); // создаем новый тэг. За его основу берем данные из поля .tag нашего объекта
  newTag.innerHTML = object.text; //Внутрь только что созданного тэга помещаем содержимое поля .text нашего объекта 
  var newTagClone = newTag.cloneNode(true); //Создаем клон вышесозданного тэга, он нам нужен для того, чтобы потом при помощи цикла добавить его определенное количество раз. 
    //Создаем мы его потому что мы не можем поместить один объект в структуру документа несколько раз, клонирование решает проблему (!!По идее, именно эту строку строку можно вовсе закомментить, 
    //она является скорее ознакомительной и не несет какую-либо логику)
  console.log('body до изменения:')//просто выввод строки для демонстрации изменений
  console.log(document.body.innerHTML); //вывод html страницы до добавления нового тэга (просто демонстрация)
  for (var i = 0; i < object.count; i++) { // зациклим добавление и создание нового клона (в зависимости от count(если count <=0 то добавления не будет, что логично ))
  var newTagClone = newTag.cloneNode(true); //создаем копию тэга
  document.body.appendChild(newTagClone); // добавляем копию на страницу
  }
  console.log('body после изменения:')
  console.log(document.body.innerHTML);//вывод html страницы после добавления нового тэга (просто демонстрация)
};

